name: Database Migrations

on:
  push:
    paths:
      - 'services/*/migrations/**'
      - 'services/*/app/models.py'
  pull_request:
    paths:
      - 'services/*/migrations/**'
      - 'services/*/app/models.py'

jobs:
  test-migrations:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [billing-service, calc-service, doc-service, embedding-api, etl-service, risk-engine]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install alembic sqlalchemy psycopg2-binary

      - name: Run migrations
        env:
          DATABASE_URL: postgresql+psycopg2://testuser:testpass@localhost:5432/testdb
        run: |
          cd services/${{ matrix.service }}
          if [ -f alembic.ini ]; then
            alembic upgrade head
          else
            echo "No alembic.ini found, skipping migrations for ${{ matrix.service }}"
          fi

      - name: Test downgrade and re-upgrade
        env:
          DATABASE_URL: postgresql+psycopg2://testuser:testpass@localhost:5432/testdb
        run: |
          cd services/${{ matrix.service }}
          if [ -f alembic.ini ]; then
            alembic downgrade -1 || echo "No previous revision to downgrade"
            alembic upgrade head
          fi

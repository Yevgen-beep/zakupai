#!/bin/sh
# –°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Vault –¥–ª—è ZakupAI (Stage 7 ‚Äî Phase 3)
# –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑–æ–ø–∞—Å–µ–Ω: –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –Ω–µ –ª–æ–º–∞—é—Ç —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Vault.

set -eu

# ‚öôÔ∏è –ë–∞–∑–æ–≤—ã–µ –ø—É—Ç–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
VAULT_ADDR="${VAULT_ADDR:-http://127.0.0.1:8200}"
export VAULT_ADDR                                   # CLI –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ö–æ–¥–∏—Ç –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π Vault API

SCRIPT_DIR="$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)"
CREDS_DIR="/vault/creds"
INIT_FILE="${CREDS_DIR}/init.json"
POLICY_PATH="${SCRIPT_DIR}/policies/zakupai-policy.hcl"

umask 077                                              # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã
mkdir -p "${CREDS_DIR}"

log() {
  # –õ–æ–≥–∏—Ä—É–µ–º –≤ –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è –±—É–¥—É—â–∏—Ö –∞—É–¥–∏—Ç-—Å–∫—Ä–∏–ø—Ç–æ–≤
  printf '[vault-init] %s\n' "$*"
}

# üîç –ß—Ç–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ Vault (–≤–æ–∑–º–æ–∂–Ω—ã –∫–æ–¥—ã 0/1/2/4; –Ω–µ —Å—á–∏—Ç–∞–µ–º –∏—Ö –æ—à–∏–±–∫–æ–π)
STATUS_JSON="$(vault status -format=json 2>/dev/null || true)"
initialized="$(printf '%s' "${STATUS_JSON:-false}" | jq -r '.initialized // false' 2>/dev/null || printf 'false')"
sealed="$(printf '%s' "${STATUS_JSON:-true}" | jq -r '.sealed // true' 2>/dev/null || printf 'true')"

if [ "${initialized}" != "true" ]; then
  log "Vault –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω ‚Äî –≤—ã–ø–æ–ª–Ω—è—é vault operator init"
  vault operator init -key-shares=5 -key-threshold=3 -format=json > "${INIT_FILE}.tmp"
  mv "${INIT_FILE}.tmp" "${INIT_FILE}"
else
  log "Vault —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é init"
fi

if [ ! -f "${INIT_FILE}" ]; then
  log "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω ${INIT_FILE}. –ë–µ–∑ –Ω–µ–≥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."
  exit 1
fi

if ! command -v jq >/dev/null 2>&1; then
  log "‚ùå jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –æ–±—Ä–∞–∑ Vault."
  exit 1
fi

UNSEAL_KEYS="$(jq -r '.unseal_keys_b64[]' "${INIT_FILE}" 2>/dev/null || true)"
ROOT_TOKEN="$(jq -r '.root_token' "${INIT_FILE}" 2>/dev/null || true)"

if [ -z "${ROOT_TOKEN}" ] || [ "${ROOT_TOKEN}" = "null" ]; then
  log "‚ùå –í ${INIT_FILE} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Initial Root Token. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é."
  exit 1
fi

UNSEAL_COUNT="$(printf '%s\n' "${UNSEAL_KEYS}" | sed '/^$/d' | wc -l | tr -d ' ')"
if [ "${UNSEAL_COUNT:-0}" -lt 3 ]; then
  log "‚ùå –ù–∞–π–¥–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ unseal-–∫–ª—é—á–µ–π (${UNSEAL_COUNT}). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ${INIT_FILE}."
  exit 1
fi

# üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á–∏ –∏ —Ç–æ–∫–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã (—É–¥–æ–±–Ω–æ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å—ã –∫–∞–∫ read-only)
idx=1
printf '%s\n' "${UNSEAL_KEYS}" | while IFS= read -r key; do
  [ -n "${key}" ] || continue
  printf '%s\n' "${key}" > "${CREDS_DIR}/unseal_key_${idx}.txt"
  idx=$((idx + 1))
done
printf '%s\n' "${ROOT_TOKEN}" > "${CREDS_DIR}/root_token.txt"

# üîì –†–∞—Å–ø–µ—á–∞—Ç–∫–∞ (unseal) ‚Äî –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç—Ä—ë—Ö –∫–ª—é—á–µ–π
if [ "${sealed}" = "true" ]; then
  log "Vault –∑–∞–ø–µ—á–∞—Ç–∞–Ω ‚Äî –≤—ã–ø–æ–ª–Ω—è—é unseal —Ç—Ä–µ–º—è –∫–ª—é—á–∞–º–∏"
  count=0
  printf '%s\n' "${UNSEAL_KEYS}" | while [ "${count}" -lt 3 ]; do
    read -r key || break
    [ -n "${key}" ] || continue
    vault operator unseal "${key}" >/dev/null
    count=$((count + 1))
  done
else
  log "Vault —É–∂–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ unsealed ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é unseal"
fi

# üõ°Ô∏è –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∞ –Ω–µ vault login)
VAULT_TOKEN="${ROOT_TOKEN}"
export VAULT_TOKEN

# üîê –í–∫–ª—é—á–∞–µ–º auth backend AppRole
if ! vault auth list -format=json 2>/dev/null | grep -q '"approle/"'; then
  log "–í–∫–ª—é—á–∞—é AppRole auth backend"
  vault auth enable approle >/dev/null
else
  log "AppRole —É–∂–µ –≤–∫–ª—é—á—ë–Ω"
fi

# üì¶ –í–∫–ª—é—á–∞–µ–º KV v2 –ø–æ –ø—É—Ç–∏ zakupai
if ! vault secrets list -format=json 2>/dev/null | grep -q '"zakupai/"'; then
  log "–í–∫–ª—é—á–∞—é KV v2 –ø–æ –ø—É—Ç–∏ zakupai/"
  vault secrets enable -path=zakupai kv-v2 >/dev/null
else
  log "KV zakupai/ —É–∂–µ –≤–∫–ª—é—á—ë–Ω"
fi

# üìú –í–∫–ª—é—á–∞–µ–º PKI –¥–ª—è –±—É–¥—É—â–∏—Ö TLS-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
if ! vault secrets list -format=json 2>/dev/null | grep -q '"pki/"'; then
  log "–í–∫–ª—é—á–∞—é PKI backend"
  vault secrets enable -path=pki pki >/dev/null
  vault secrets tune -max-lease-ttl=8760h pki >/dev/null   # 1 –≥–æ–¥ –¥–ª—è –≤—ã–¥–∞–≤–∞–µ–º—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
else
  log "PKI backend —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω"
fi

# üõ°Ô∏è –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–∞ ZakupAI
if [ ! -f "${POLICY_PATH}" ]; then
  log "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø–æ–ª–∏—Ç–∏–∫–∏ ${POLICY_PATH}"
  exit 1
fi
log "–û–±–Ω–æ–≤–ª—è—é –ø–æ–ª–∏—Ç–∏–∫—É zakupai-policy"
vault policy write zakupai-policy "${POLICY_PATH}" >/dev/null

# üë• –°–æ–∑–¥–∞—ë–º AppRole –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ Alertmanager
for role in etl-service calc-service risk-engine alertmanager; do
  log "–û–±–Ω–æ–≤–ª—è—é AppRole ${role}"
  vault write "auth/approle/role/${role}" \
    secret_id_ttl="24h" \
    token_ttl="1h" \
    token_max_ttl="4h" \
    token_policies="zakupai-policy" >/dev/null

  ROLE_ID="$(vault read -field=role_id "auth/approle/role/${role}/role-id")"
  printf '%s\n' "${ROLE_ID}" > "${CREDS_DIR}/${role}_role_id.txt"

  SECRET_ID="$(vault write -f -field=secret_id "auth/approle/role/${role}/secret-id")"
  printf '%s\n' "${SECRET_ID}" > "${CREDS_DIR}/${role}_secret_id.txt"
done

# üîë –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ–∫—Ä–µ—Ç KV zakupai/app
log "–°–æ–∑–¥–∞—é/–æ–±–Ω–æ–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–π KV zakupai/app"
vault kv put zakupai/app \
  DATABASE_URL="postgresql://zakupai:zakupai@zakupai-db:5432/zakupai" \
  GOSZAKUP_TOKEN="dummy-goszakup-token" \
  TELEGRAM_BOT_TOKEN="dummy-bot-token" >/dev/null

# ‚úÖ –í—ã–≤–æ–¥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
if vault status >/dev/null 2>&1; then
  log "Vault –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ."
else
  log "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: vault status –≤–µ—Ä–Ω—É–ª –Ω–µ–Ω—É–ª–µ–≤–æ–π –∫–æ–¥, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é."
fi

# üîê –í—ã–≤–æ–¥–∏–º root token —Ç–æ–ª—å–∫–æ –≤ stdout —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º ‚Äî –µ–≥–æ –Ω—É–∂–Ω–æ –æ—Ç–æ–∑–≤–∞—Ç—å –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
printf 'Initial root token: %s\n' "${ROOT_TOKEN}"
printf '‚ö†Ô∏è  –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–¥–∞–π—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –∏ –æ—Ç–∑–æ–≤–∏—Ç–µ root-—Ç–æ–∫–µ–Ω!\n'

# üßπ –£–¥–∞–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —á—Ç–æ–±—ã root-token –Ω–µ –æ—Å—Ç–∞–ª—Å—è –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
unset VAULT_TOKEN

exit 0

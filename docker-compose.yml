services:
  db:
    image: postgres:16
    container_name: zakupai-db
    environment:
      POSTGRES_USER: zakupai
      POSTGRES_PASSWORD: zakupai
      POSTGRES_DB: zakupai
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zakupai"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - zakupai-network
    restart: unless-stopped

  embedding-api:
    build: ./services/embedding-api
    container_name: zakupai-embedding-api
    ports:
      - "7010:8000"
    env_file:
      - .env
    networks:
      - zakupai-network
      - ai-network
    restart: unless-stopped

  calc-service:
    build: ./services/calc-service
    container_name: zakupai-calc-service
    ports:
      - "7001:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - zakupai-network
    restart: unless-stopped

  risk-engine:
    build: ./services/risk-engine
    container_name: zakupai-risk-engine
    ports:
      - "7002:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      calc-service:
        condition: service_started
      embedding-api:
        condition: service_started
    networks:
      - zakupai-network
      - ai-network
    restart: unless-stopped

  doc-service:
    build: ./services/doc-service
    container_name: zakupai-doc-service
    ports:
      - "7003:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      embedding-api:
        condition: service_started
    networks:
      - zakupai-network
      - ai-network
    restart: unless-stopped

  gateway:
    image: nginx:alpine
    container_name: zakupai-gateway
    ports:
      - "8080:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - calc-service
      - risk-engine
      - doc-service
      - embedding-api
    networks:
      - zakupai-network
    restart: unless-stopped

  ollama:
    image: ollama/ollama
    container_name: zakupai-ollama
    runtime: nvidia
    environment:
      NVIDIA_VISIBLE_DEVICES: all
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - ai-network
    restart: unless-stopped
    entrypoint: >
      sh -c "
        ollama pull nomic-embed-text &&
        echo 'Starting Ollama server...' &&
        ollama serve
      "

  chroma:
    image: chromadb/chroma
    container_name: zakupai-chroma
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=*
      - CHROMA_SERVER_HOST=0.0.0.0
    networks:
      - ai-network
    restart: unless-stopped

  flowise:
    image: flowiseai/flowise
    container_name: zakupai-flowise
    ports:
      - "3000:3000"
    volumes:
      - flowise_data:/root/.flowise
      - ./flowise-tools:/opt/flowise_tools:ro
    environment:
      - FLOWISE_USERNAME=admin
      - FLOWISE_PASSWORD=admin123
      - DATABASE_PATH=/root/.flowise/flowise.sqlite
      - SECRETKEY_PATH=/root/.flowise
      - LOG_LEVEL=info
      - LOG_PATH=/root/.flowise/logs
      - BLOB_STORAGE_PATH=/root/.flowise/storage
    env_file:
      - .env
    networks:
      - ai-network
      - zakupai-network
    depends_on:
      - ollama
      - chroma
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:1.105.4
    container_name: zakupai-n8n
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    environment:
      - GENERIC_TIMEZONE=Asia/Almaty
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_EDITOR_BASE_URL=https://n8n.exomind.site
      - WEBHOOK_URL=https://n8n.exomind.site
      - N8N_ENCRYPTION_KEY=mySecretEncryptionKey123456
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      - DB_SQLITE_POOL_SIZE=10
      - N8N_RUNNERS_ENABLED=true
      - N8N_SECURE_COOKIE=false
    env_file:
      - .env
    networks:
      - ai-network
      - zakupai-network
    restart: unless-stopped

volumes:
  postgres_data:
  ollama_data:
  chroma_data:
  flowise_data:
  n8n_data:

networks:
  zakupai-network:
    driver: bridge
  ai-network:
    driver: bridge

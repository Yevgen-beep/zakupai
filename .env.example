# ===========================================
# ZakupAI Environment Configuration
# ===========================================
# Copy this file to .env and fill in your actual values
#
# Environment examples:
# - Development: localhost, http://localhost:8080
# - Staging: zakupai.stage.site, https://api.stage.zakupai.site
# - Production: zakupai.site, https://api.zakupai.site

# ===========================================
# ü§ñ TELEGRAM BOT
# ===========================================
# Telegram Bot configuration is in bot/.env.example
# This keeps bot-specific settings separate from general services
# Copy bot/.env.example to bot/.env and configure your actual values
# Get your bot token from @BotFather on Telegram

# ===========================================
# üóÑÔ∏è DATABASES
# ===========================================

# Primary PostgreSQL Database
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=zakupai_user
POSTGRES_PASSWORD=your_secure_db_password_here
POSTGRES_DB=zakupai

# Alternative: Full database URL (overrides individual settings above)
# DATABASE_URL=postgresql+asyncpg://zakupai_user:password@localhost:5432/zakupai

# Billing Service Database Schema
BILLING_DB_SCHEMA=billing

# ChromaDB Vector Database
CHROMADB_HOST=localhost
CHROMADB_PORT=8000
CHROMADB_COLLECTION=zakupai_docs

# ===========================================
# üèóÔ∏è CORE SERVICES
# ===========================================

# Main API Gateway
ZAKUPAI_API_URL=http://localhost:8080
ZAKUPAI_API_KEY=your_api_key_here
# Generate with: openssl rand -hex 32

# Billing Service
BILLING_SERVICE_URL=http://localhost:7004
# Examples:
# - Dev: http://localhost:7004
# - Stage: https://billing.stage.zakupai.site
# - Prod: https://billing.zakupai.site

# Microservices (internal communication)
CALC_SERVICE_URL=http://localhost:7001
RISK_SERVICE_URL=http://localhost:7002
DOC_SERVICE_URL=http://localhost:7003
EMBEDDING_SERVICE_URL=http://localhost:7010

# Legacy port mappings (for backward compatibility)
CALC_PORT=7001
RISK_PORT=7002
DOC_PORT=7003
EMB_PORT=7010

# ===========================================
# üîó EXTERNAL INTEGRATIONS
# ===========================================

# n8n Workflow Automation
N8N_WEBHOOK_URL=http://localhost:5678/webhook/search-lots
# For ZakupAI lot search integration
# If configured, the bot will use this webhook for lot searches with fallback to direct API
# If not configured, bot will only use direct GoszakupSearchService API
# Examples:
# - Dev: http://localhost:5678/webhook/search-lots
# - Prod: https://n8n.zakupai.site/webhook/search-lots
N8N_API_KEY=your_n8n_api_key_here
N8N_BASE_URL=http://localhost:5678
# Examples:
# - Dev: http://localhost:5678
# - Prod: https://n8n.zakupai.site

# Flowise AI Workflows
FLOWISE_BASE_URL=http://localhost:3000
FLOWISE_API_KEY=your_flowise_api_key_here
FLOWISE_USER=admin
FLOWISE_PASSWORD=your_flowise_password_here
# Examples:
# - Dev: http://localhost:3000
# - Prod: https://flowise.zakupai.site

# Ollama LLM Service
OLLAMA_BASE_URL=http://host.docker.internal:11434
# Docker: http://host.docker.internal:11434
# Local: http://localhost:11434
# Remote: https://ollama.zakupai.site
OLLAMA_MODEL=qwen2.5:latest

# ===========================================
# üìä MONITORING & OBSERVABILITY
# ===========================================

# Prometheus Metrics
PROMETHEUS_URL=http://localhost:9090
# Examples:
# - Dev: http://localhost:9090
# - Prod: https://prometheus.zakupai.site

# Grafana Dashboards
GRAFANA_URL=http://localhost:3001
GRAFANA_USER=admin
GRAFANA_PASSWORD=your_grafana_password_here
# Examples:
# - Dev: http://localhost:3001
# - Prod: https://grafana.zakupai.site

# Alertmanager
ALERTMANAGER_URL=http://localhost:9093
# Examples:
# - Dev: http://localhost:9093
# - Prod: https://alerts.zakupai.site

# Container monitoring
CADVISOR_URL=http://localhost:8081
NODE_EXPORTER_URL=http://localhost:9100
BLACKBOX_EXPORTER_URL=http://localhost:9115

# ===========================================
# üíæ BACKUP & STORAGE
# ===========================================

# Backblaze B2 Cloud Storage
BACKBLAZE_KEY_ID=your_backblaze_key_id_here
BACKBLAZE_APPLICATION_KEY=your_backblaze_app_key_here
BACKBLAZE_BUCKET_NAME=zakupai-backups
BACKBLAZE_ENDPOINT=https://s3.us-west-000.backblazeb2.com

# Alternative: AWS S3
# AWS_ACCESS_KEY_ID=your_aws_access_key_here
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
# AWS_S3_BUCKET=zakupai-backups
# AWS_REGION=us-east-1

# Backup schedule (cron format)
BACKUP_SCHEDULE=0 2 * * *
# Daily at 2:00 AM

# ===========================================
# üîí SECURITY & PERFORMANCE
# ===========================================

# Environment & SSL
ENVIRONMENT=development
# Options: development, staging, production
SSL_VERIFY=true
# Set to false only for development with self-signed certs

# Rate Limiting & Timeouts
REQUEST_TIMEOUT=30
MAX_REQUESTS_PER_MINUTE=10
API_KEY_MIN_LENGTH=10

# JWT & Session Security
JWT_SECRET_KEY=your_jwt_secret_key_here
# Generate with: openssl rand -hex 64
SESSION_SECRET=your_session_secret_here
# Generate with: openssl rand -hex 32

# Encryption keys
ENCRYPTION_KEY=your_encryption_key_here
# Generate with: openssl rand -hex 32

# ===========================================
# üí≥ PAYMENT INTEGRATIONS (Production Only)
# ===========================================

# Kaspi API (Kazakhstan)
KASPI_MERCHANT_ID=your_kaspi_merchant_id_here
KASPI_SECRET_KEY=your_kaspi_secret_key_here
KASPI_API_URL=https://api.kaspi.kz/v1

# Stripe (International)
STRIPE_PUBLIC_KEY=pk_test_your_stripe_public_key_here
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here
# Use pk_live_ and sk_live_ for production

# Yandex.Money (Russia/CIS)
YANDEX_MONEY_WALLET=your_yandex_wallet_here
YANDEX_MONEY_SECRET=your_yandex_secret_here

# ===========================================
# üîê SECURITY BEST PRACTICES
# ===========================================
#
# üö® CRITICAL SECURITY RULES:
# 1. NEVER commit .env files to git (add .env to .gitignore)
# 2. Use different credentials for dev/stage/prod environments
# 3. Rotate all secrets regularly (monthly for production)
# 4. Use strong passwords: 16+ chars, mixed case, numbers, symbols
# 5. Generate secure keys: openssl rand -hex 32
#
# ü§ñ Telegram Bot Security (configure in bot/.env):
# - Get token from @BotFather only
# - Never share bot token (anyone with it controls your bot)
# - Use webhooks in production (more secure than polling)
# - Set up webhook secret for additional security
#
# üóÑÔ∏è Database Security:
# - Create dedicated database user with minimal permissions
# - Enable SSL connections: sslmode=require in DATABASE_URL
# - Use connection pooling in production
# - Regular database backups (automated with our backup service)
# - Never use root/admin accounts for applications
#
# üîó API Security:
# - All API keys must be UUID format or 32+ char random strings
# - Use HTTPS only in staging/production (SSL_VERIFY=true)
# - Implement rate limiting to prevent abuse
# - Log all API usage for monitoring and billing
#
# üí≥ Payment Security:
# - Store payment keys in encrypted form only
# - Use test keys (pk_test_, sk_test_) for development
# - Production keys (pk_live_, sk_live_) only on production servers
# - Never log payment details or card information
# - Implement PCI DSS compliance for card processing
# - Use webhook secrets to verify payment notifications
#
# üîí Infrastructure Security:
# - Use HTTPS for all external communications
# - Set up proper firewall rules (only required ports open)
# - Regular security updates for all containers and services
# - Monitor failed login attempts and suspicious activity
# - Use VPN for database access in production
#
# üìä Monitoring Security:
# - Protect Grafana/Prometheus with authentication
# - Set up alerts for security events (failed logins, rate limit violations)
# - Monitor disk space and memory usage
# - Regular security audits and penetration testing
#
# üíæ Backup Security:
# - Encrypt all backups before uploading to cloud storage
# - Test backup restoration procedures regularly
# - Store backup keys separately from application keys
# - Implement backup retention policy (keep 30 days, then monthly)
#
# üîÑ Key Rotation Schedule:
# - API keys: Monthly
# - Database passwords: Quarterly
# - JWT secrets: Weekly
# - Payment keys: Only when compromised
# - Backup encryption: Quarterly
#
# üìã Environment Checklist:
# Development ‚úÖ
# - localhost URLs
# - test API keys
# - SSL_VERIFY=false (if needed)
# - detailed logging
#
# Staging ‚úÖ
# - *.stage.zakupai.site URLs
# - staging API keys
# - SSL_VERIFY=true
# - production-like monitoring
#
# Production ‚úÖ
# - *.zakupai.site URLs
# - live API keys
# - SSL_VERIFY=true
# - full monitoring & alerting
# - automated backups
# - security scanning

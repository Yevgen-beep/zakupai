services:
  # n8n Workflow Automation
  zakupai-n8n:
    image: n8nio/n8n:1.105.4
    container_name: zakupai-n8n
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-zakupai2024}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_TUNNEL_URL=${N8N_WEBHOOK_URL:-http://localhost:5678}
      - GENERIC_TIMEZONE=Asia/Almaty
      - DB_TYPE=sqlite
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      # ZakupAI Integration
      - ZAKUPAI_API_KEY=${ZAKUPAI_API_KEY:-your-api-key-here}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_HOT_LOTS_CHANNEL=${TELEGRAM_HOT_LOTS_CHANNEL:-@hot_lots}
      - TELEGRAM_ADMIN_CHANNEL=${TELEGRAM_ADMIN_CHANNEL:-@admin}
      - GOSZAKUP_TOKEN=${GOSZAKUP_TOKEN}
    ports:
      - "5678:5678"
    volumes:
      - zakupai_n8n_data:/home/node/.n8n
    networks:
      - zakupai-network
    # depends on external services
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Flowise AI Chatflow
  zakupai-flowise:
    image: flowiseai/flowise:latest
    container_name: zakupai-flowise
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - PORT=3000
      - FLOWISE_USERNAME=admin
      - FLOWISE_PASSWORD=zakupai2024
      - FLOWISE_OVERRIDE_DATABASE=true
      - DATABASE_PATH=/opt/flowise/.flowise
      - APIKEY_PATH=/opt/flowise/.flowise
      - SECRETKEY_PATH=/opt/flowise/.flowise
      - LOG_LEVEL=info
      - LOG_PATH=/opt/flowise/logs
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # ZakupAI Integration
      - ZAKUPAI_API_KEY=${ZAKUPAI_API_KEY:-your-api-key-here}
      - ZAKUPAI_BASE_URL=http://zakupai-gateway
    ports:
      - "3000:3000"
    volumes:
      - ./workflows/flowise:/opt/flowise/chatflows
      - zakupai_flowise_data:/opt/flowise/.flowise
      - zakupai_flowise_logs:/opt/flowise/logs
    networks:
      - zakupai-network
    # depends on external services
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/v1/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Workflow Scheduler (for cron-like tasks)
  zakupai-scheduler:
    image: mcuadros/ofelia:latest
    container_name: zakupai-scheduler
    restart: unless-stopped
    # depends on n8n
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - zakupai-network
    labels:
      ofelia.enabled: "true"
      # Daily lot scanner - 3 times a day
      ofelia.job-exec.lot-scanner.schedule: "0 9,14,18 * * *"
      ofelia.job-exec.lot-scanner.container: "zakupai-n8n"
      ofelia.job-exec.lot-scanner.command: 'curl -X POST "http://localhost:5678/webhook/daily-lot-scanner" -H "Content-Type: application/json"'

      # Price monitor - 3 times a day
      ofelia.job-exec.price-monitor.schedule: "0 6,12,20 * * *"
      ofelia.job-exec.price-monitor.container: "zakupai-n8n"
      ofelia.job-exec.price-monitor.command: 'curl -X POST "http://localhost:5678/webhook/price-monitor" -H "Content-Type: application/json"'

      # Health check workflows
      ofelia.job-exec.health-check.schedule: "*/10 * * * *"
      ofelia.job-exec.health-check.container: "zakupai-n8n"
      ofelia.job-exec.health-check.command: 'curl -X GET "http://localhost:5678/healthz"'

volumes:
  zakupai_n8n_data:
    driver: local
  zakupai_flowise_data:
    driver: local
  zakupai_flowise_logs:
    driver: local

networks:
  zakupai-network:
    name: zakupai_zakupai-network
    external: true

services:
  # =============================================================================
  # СЕРВИСЫ ЯДРА ZAKUPAI
  # =============================================================================
  db:
    profiles: ["stage6"]

  embedding-api:
    profiles: ["stage6"]
    build:
      context: ./services/embedding-api
      dockerfile: Dockerfile

  calc-service:
    profiles: ["stage6"]
    build:
      context: ./services/calc-service
      dockerfile: Dockerfile

  risk-engine:
    profiles: ["stage6"]
    build:
      context: ./services/risk-engine
      dockerfile: Dockerfile

  doc-service:
    profiles: ["stage6"]
    build:
      context: ./services/doc-service
      dockerfile: Dockerfile

  chromadb:
    profiles: ["stage6"]

  goszakup-api:
    profiles: ["stage6"]

  billing-service:
    profiles: ["stage6"]
    build:
      context: ./services/billing-service
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  etl-service:
    profiles: ["stage6"]
    build:
      context: ./services/etl-service
      dockerfile: Dockerfile

  # =============================================================================
  # MIGRATION-RUNNER СЕРВИСЫ
  # =============================================================================
  # migration-runner-billing-service:
  #   profiles: ["migrations-disabled"]
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.migration
  #   command: sh -c "alembic upgrade head"
  #   environment:
  #     - DATABASE_URL=${BILLING_DB_URL:-${DATABASE_URL}}
  #   volumes:
  #     - ./services/billing-service:/app
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     billing-service:
  #       condition: service_started
  #   networks:
  #     - zakupai-network
  #   restart: "no"

  # migration-runner-calc-service:
  #   profiles: ["migrations-disabled"]
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.migration
  #   command: sh -c "alembic upgrade head"
  #   environment:
  #     - DATABASE_URL=${CALC_DB_URL:-${DATABASE_URL}}
  #   volumes:
  #     - ./services/calc-service:/app
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     calc-service:
  #       condition: service_started
  #   networks:
  #     - zakupai-network
  #   restart: "no"

  # migration-runner-doc-service:
  #   profiles: ["migrations-disabled"]
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.migration
  #   command: sh -c "alembic upgrade head"
  #   environment:
  #     - DATABASE_URL=${DOC_DB_URL:-${DATABASE_URL}}
  #   volumes:
  #     - ./services/doc-service:/app
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     doc-service:
  #       condition: service_started
  #   networks:
  #     - zakupai-network
  #   restart: "no"

  # migration-runner-embedding-api:
  #   profiles: ["migrations-disabled"]
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.migration
  #   command: sh -c "alembic upgrade head"
  #   environment:
  #     - DATABASE_URL=${EMBEDDING_DB_URL:-${DATABASE_URL}}
  #   volumes:
  #     - ./services/embedding-api:/app
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     embedding-api:
  #       condition: service_started
  #   networks:
  #     - zakupai-network
  #   restart: "no"

  migration-runner-etl-service:
    profiles: ["stage6"]
    build:
      context: .
      dockerfile: Dockerfile.migration
    command: sh -c "alembic upgrade head"
    environment:
      - DATABASE_URL=${ETL_DB_URL:-${DATABASE_URL}}
    volumes:
      - ./services/etl-service:/app
    depends_on:
      db:
        condition: service_healthy
      etl-service:
        condition: service_started
    networks:
      - zakupai-network
    restart: "no"

  # migration-runner-risk-engine:
  #   profiles: ["migrations-disabled"]
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.migration
  #   command: sh -c "alembic upgrade head"
  #   environment:
  #     - DATABASE_URL=${RISK_DB_URL:-${DATABASE_URL}}
  #   volumes:
  #     - ./services/risk-engine:/app
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     risk-engine:
  #       condition: service_started
  #   networks:
  #     - zakupai-network
  #   restart: "no"

  # =============================================================================
  # ПРОЧИЕ СЕРВИСЫ
  # =============================================================================
  gateway:
    profiles: ["stage6"]
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  flowise:
    profiles: ["stage6"]

  n8n:
    profiles: ["stage6"]

  zakupai-bot:
    profiles: ["stage6"]
    build:
      context: ./bot
      dockerfile: Dockerfile

  web-ui:
    profiles: ["stage6"]
    build:
      context: ./web
      dockerfile: Dockerfile

  db-backup:
    profiles: ["stage6"]

  # =============================================================================
  # ДОПОЛНИТЕЛЬНЫЕ СЕРВИСЫ МОНИТОРИНГА
  # =============================================================================
  grafana:
    profiles: ["stage6"]

  alertmanager:
    profiles: ["stage6"]

  blackbox-exporter:
    profiles: ["stage6"]

  cadvisor:
    profiles: ["stage6"]

  loki:
    image: grafana/loki:2.9.0
    container_name: zakupai-loki
    profiles: ["stage6"]
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - zakupai-network
    volumes:
      - loki_data:/loki

  promtail:
    image: grafana/promtail:2.9.0
    container_name: zakupai-promtail-stage6
    profiles: ["stage6"]
    command: -config.file=/etc/promtail/promtail-config.yml
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./monitoring/promtail-config.yml:/etc/promtail/promtail-config.yml:ro
    networks:
      - zakupai-network
    depends_on:
      - loki
    restart: unless-stopped

  vault:
    image: hashicorp/vault:1.15.4
    container_name: zakupai-vault
    profiles: ["stage6"]
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    networks:
      - zakupai-network

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: zakupai-prometheus
    profiles: ["stage6"]
    ports:
      - "9095:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - zakupai-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  node-exporter-stage6:
    image: prom/node-exporter:v1.8.1
    container_name: zakupai-node-exporter-stage6
    profiles: ["stage6"]
    ports:
      - "19100:9100"
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host/rootfs:ro
    networks:
      - zakupai-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  prometheus_data:
  loki_data:

networks:
  zakupai-network:
    driver: bridge
  ai-network:
    driver: bridge

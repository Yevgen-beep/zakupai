{
  "name": "ZakupAI Search (GraphQL v2)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "goszakup-search",
        "responseMode": "responseNode"
      },
      "id": "1",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [0, 0],
      "webhookId": "goszakup-search"
    },
    {
      "parameters": {
        "url": "https://ows.goszakup.gov.kz/v2/graphql",
        "options": {},
        "authentication": "none",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer <–¢–í–û–ô_–¢–û–ö–ï–ù>"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({ \"query\": \"query SearchLots($filter: LotsFiltersInput) { Lots(filter: $filter) { id lotNumber nameRu descriptionRu amount count customerNameRu customerBin trdBuyNumberAnno TrdBuy { id nameRu numberAnno orgNameRu orgBin RefTradeMethods { nameRu } } RefLotsStatus { nameRu } } }\", \"variables\": { \"filter\": { \"nameRu\": $json.query, \"nameDescriptionRu\": $json.query } } }) }}"
      },
      "id": "2",
      "name": "Goszakup GraphQL v2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [300, 0]
    },
    {
      "parameters": {
        "functionCode": "const lots = $json.data?.Lots || [];\nif (!lots.length) {\n  return [{ json: { ok: false, text: \"üîç –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.\" } }];\n}\n\nlet out = [`üìã –ù–∞–π–¥–µ–Ω–æ –ª–æ—Ç–æ–≤: ${lots.length}\\n\\n`];\nlots.forEach((lot, i) => {\n  out.push(`üîπ **–õ–æ—Ç ${i+1}**\\n`);\n  out.push(`üìù ‚Ññ –ª–æ—Ç–∞: ${lot.lotNumber || '–ù–µ —É–∫–∞–∑–∞–Ω'}\\n`);\n  \n  if (lot.trdBuyNumberAnno || lot.TrdBuy?.numberAnno) {\n    out.push(`üìã –û–±—ä—è–≤–ª–µ–Ω–∏–µ: ${lot.trdBuyNumberAnno || lot.TrdBuy?.numberAnno}\\n`);\n  }\n  \n  if (lot.TrdBuy?.nameRu) {\n    out.push(`üìÑ –ù–∞–∑–≤–∞–Ω–∏–µ: ${lot.TrdBuy.nameRu}\\n`);\n  }\n  \n  out.push(`üì¶ –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: ${lot.nameRu || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\\n`);\n  \n  if (lot.descriptionRu) {\n    const description = lot.descriptionRu.length > 200 ? \n      lot.descriptionRu.substring(0, 200) + '...' : lot.descriptionRu;\n    out.push(`üìã –û–ø–∏—Å–∞–Ω–∏–µ: ${description}\\n`);\n  }\n  \n  if (lot.count > 0) {\n    out.push(`üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${lot.count}\\n`);\n  }\n  \n  if (lot.amount > 0) {\n    out.push(`üí∞ –°—É–º–º–∞: ${Number(lot.amount).toLocaleString('ru')} —Ç–≥\\n`);\n  }\n  \n  out.push(`üè¢ –ó–∞–∫–∞–∑—á–∏–∫: ${lot.customerNameRu || lot.TrdBuy?.orgNameRu || '–ù–µ —É–∫–∞–∑–∞–Ω'}\\n`);\n  \n  if (lot.customerBin || lot.TrdBuy?.orgBin) {\n    out.push(`üèõÔ∏è –ë–ò–ù: ${lot.customerBin || lot.TrdBuy?.orgBin}\\n`);\n  }\n  \n  const tradeMethod = lot.TrdBuy?.RefTradeMethods?.nameRu || '–ù–µ —É–∫–∞–∑–∞–Ω';\n  out.push(`üõí –°–ø–æ—Å–æ–± –∑–∞–∫—É–ø–∫–∏: ${tradeMethod}\\n`);\n  \n  const status = lot.RefLotsStatus?.nameRu || '–ù–µ —É–∫–∞–∑–∞–Ω';\n  out.push(`üìå –°—Ç–∞—Ç—É—Å: ${status}\\n`);\n  \n  out.push('\\n' + '‚îÄ'.repeat(50) + '\\n\\n');\n});\n\nreturn [{ json: { ok: true, text: out.join('') } }];"
      },
      "id": "3",
      "name": "Format Lots Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [600, 0]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{$json}}"
      },
      "id": "4",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [900, 0]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [[{ "node": "Goszakup GraphQL v2", "type": "main", "index": 0 }]]
    },
    "Goszakup GraphQL v2": {
      "main": [[{ "node": "Format Lots Data", "type": "main", "index": 0 }]]
    },
    "Format Lots Data": {
      "main": [[{ "node": "Respond to Webhook", "type": "main", "index": 0 }]]
    }
  },
  "active": true
}
